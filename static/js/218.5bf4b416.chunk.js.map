{"version":3,"file":"static/js/218.5bf4b416.chunk.js","mappings":"sOACA,EAAwB,yBAAxB,EAAwD,wBAAxD,EAAwF,yBAAxF,EAAyH,yBAAzH,EAAgK,+B,UCIjJ,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GACTE,EAAW,CACfL,MAAOC,EACPG,SAH0BD,EAAA,IAMtBG,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAME,OAAtBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACdN,EAASK,GAAMC,EACjB,EAaA,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAUC,aAAa,MAAMC,SAb7B,SAAAZ,GACnBA,EAAMa,iBACN1B,GACE2B,EAAAA,EAAAA,IAAU,CACRrB,MAAAA,EACAI,SAAAA,KAGJG,EAAME,OAAOa,OACf,EAIyER,SAAA,EACnEF,EAAAA,EAAAA,KAAA,MAAII,UAAWC,EAAUH,SAAC,WAC1BC,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAWM,MAAM,QAAOT,SAAA,CAAC,SAEzCF,EAAAA,EAAAA,KAAA,SACEI,UAAWC,EACXO,KAAK,QACLd,KAAK,QACLe,SAAUnB,QAIdS,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAWM,MAAM,WAAUT,SAAA,CAAC,YAE5CF,EAAAA,EAAAA,KAAA,SACEI,UAAWC,EACXO,KAAK,WACLd,KAAK,WACLe,SAAUnB,EACVoB,UAAW,QAIfd,EAAAA,EAAAA,KAAA,UAAQI,UAAWC,EAAiBO,KAAK,SAAQV,SAAC,cAM1D,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/pages/LoginPage/LoginPage.module.css?1b07","components/pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login\":\"LoginPage_login__NQRsG\",\"form\":\"LoginPage_form__n+0xH\",\"label\":\"LoginPage_label__QdFNH\",\"input\":\"LoginPage_input__ZJON0\",\"inputButton\":\"LoginPage_inputButton__O37VQ\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { userLogin } from '../../../redux/auth/authOperation';\nimport css from './LoginPage.module.css';\n\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const userInfo = {\n    email: setEmail,\n    password: setPassword,\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    userInfo[name](value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(\n      userLogin({\n        email,\n        password,\n      })\n    );\n    event.target.reset();\n  };\n\n  return (\n    <>\n      <form className={css.form} autoComplete=\"off\" onSubmit={handleSubmit}>\n        <h3 className={css.login}>Login</h3>\n        <label className={css.label} label=\"Email\">\n          Email\n          <input\n            className={css.input}\n            type=\"email\"\n            name=\"email\"\n            onChange={handleChange}\n          />\n        </label>\n\n        <label className={css.label} label=\"Password\">\n          Password\n          <input\n            className={css.input}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChange}\n            minLength={7}\n          />\n        </label>\n\n        <button className={css.inputButton} type=\"submit\">\n          Login\n        </button>\n      </form>\n    </>\n  );\n}\n"],"names":["LoginPage","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","userInfo","handleChange","event","_event$target","target","name","value","_jsx","_Fragment","children","_jsxs","className","css","autoComplete","onSubmit","preventDefault","userLogin","reset","label","type","onChange","minLength"],"sourceRoot":""}