{"version":3,"file":"static/js/814.50a148e3.chunk.js","mappings":"wPACA,EAAyB,2BAAzB,EAA0D,wBAA1D,EAA4F,4BAA5F,EAAiI,2BAAjI,EAAqK,2B,UCMtJ,SAASA,IACtB,IAAMC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,MAIjB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAWH,UAC5BF,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAQH,SAAA,EACtBC,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAACG,EAAAA,GAAO,CACNF,UAAW,SAAAG,GAAW,OAAAA,EAARC,SAA2BH,EAAaA,CAAW,EACjEI,GAAG,IAAGP,SACP,SAGAT,GACCO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACG,EAAAA,GAAO,CACNF,UAAW,SAAAM,GAAW,OAAAA,EAARF,SACDH,EAAaA,CAAW,EAErCI,GAAG,YAAWP,SACf,cAGDC,EAAAA,EAAAA,KAAA,KAAAD,SAAIN,KACJO,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAYM,QAzBtB,WACnBb,GAASc,EAAAA,EAAAA,MACX,EAuBiEV,SAAC,eAKxDF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACG,EAAAA,GAAO,CACNF,UAAW,SAAAS,GAAW,OAAAA,EAARL,SACDH,EAAaA,CAAW,EAErCI,GAAG,UAASP,SACb,WAGDC,EAAAA,EAAAA,KAACG,EAAAA,GAAO,CACNF,UAAW,SAAAU,GAAW,OAAAA,EAARN,SACDH,EAAaA,CAAW,EAErCI,GAAG,YAAWP,SACf,sBAOTC,EAAAA,EAAAA,KAAA,QAAAD,UACEC,EAAAA,EAAAA,KAACY,EAAAA,GAAM,QAIf,C,8ICjEaC,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAE/CxB,EAAc,SAAAsB,GAAK,OAAIA,EAAMG,KAAKC,KAAM,EACxCxB,EAAkB,SAAAoB,GAAK,OAAIA,EAAMG,KAAKE,KAAM,EAE5CC,GAAoBC,EAAAA,EAAAA,IAC/B,CAACR,EALyB,SAAAC,GAAK,OAAIA,EAAMQ,MAAO,IAMhD,SAACP,EAAUO,GACT,OAAOP,EAASO,QAAO,SAAAC,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,OAAOC,SAASL,EAAOG,cAAc,GAEpE,G","sources":["webpack://goit-react-hw-08-phonebook/./src/components/pages/Navigation/Navigation.module.css?410c","components/pages/Navigation/Navigation.jsx","redux/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Navigation_header__zuR18\",\"nav\":\"Navigation_nav__e3s0e\",\"NavLink\":\"Navigation_NavLink__DJyWC\",\"active\":\"Navigation_active__rXaEA\",\"logout\":\"Navigation_logout__Cth6u\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport { logOutRequest } from '../../../redux/auth/authOperation';\nimport { selectToken, selectUserEmail } from '../../../redux/selectors';\nimport css from './Navigation.module.css';\n\nexport default function Layout() {\n  const isLoggedIn = useSelector(selectToken);\n  const userEmail = useSelector(selectUserEmail);\n  const dispatch = useDispatch();\n  const handleLogOut = () => {\n    dispatch(logOutRequest());\n  };\n  return (\n    <>\n      <header className={css.header}>\n        <nav className={css.nav}>\n          <div></div>\n          <NavLink\n            className={({ isActive }) => (isActive ? css.active : css.NavLink)}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n          {isLoggedIn ? (\n            <>\n              <NavLink\n                className={({ isActive }) =>\n                  isActive ? css.active : css.NavLink\n                }\n                to=\"/contacts\"\n              >\n                Contacts\n              </NavLink>\n              <p>{userEmail}</p>\n              <button className={css.logout} onClick={handleLogOut}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <NavLink\n                className={({ isActive }) =>\n                  isActive ? css.active : css.NavLink\n                }\n                to=\"/login \"\n              >\n                Login\n              </NavLink>\n              <NavLink\n                className={({ isActive }) =>\n                  isActive ? css.active : css.NavLink\n                }\n                to=\"/register\"\n              >\n                Register\n              </NavLink>\n            </>\n          )}\n        </nav>\n      </header>\n      <main>\n        <Outlet />\n      </main>\n    </>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectToken = state => state.auth.token;\nexport const selectUserEmail = state => state.auth.email;\n\nexport const getFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().trim().includes(filter.toLowerCase())\n    );\n  }\n);\n"],"names":["Layout","isLoggedIn","useSelector","selectToken","userEmail","selectUserEmail","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","className","css","NavLink","_ref","isActive","to","_ref2","onClick","logOutRequest","_ref3","_ref4","Outlet","selectContacts","state","contacts","items","auth","token","email","getFilterContacts","createSelector","filter","contact","name","toLowerCase","trim","includes"],"sourceRoot":""}